version: 2.1
executors:
  default:
    docker:
      - image: circleci/ruby:2.6.6-stretch-node
        environment:
          RAILS_ENV: test
          DB_HOST: 127.0.0.1
      - image: circleci/mysql:5.7
        environment:
          MYSQL_ROOT_PASSWORD: XXXXXXXX
jobs:
  build:
    executor: default
    steps:
      - checkout
      - restore_cache:
          paths:
            - .bundle/
          keys:
            - gems-202006211942-{{ checksum "Gemfile.lock" }}
            - gems-202006211942-
      - run:
          name: bundle install
          command: |
            bundle config set path '.bundle/'
            bundle config
            bundle install --jobs=4
      - save_cache:
          paths:
            - .bundle/
          key: gems-202006211942-{{ checksum "Gemfile.lock" }}
      - run:
          name: DB を待機
          command: dockerize -wait tcp://localhost:3306 -timeout 1m
      - run:
          name: データベースをセットアップ
          command: bundle exec rails db:create db:schema:load --trace
      - run:
          name: ruby syntax check
          command: |
            bundle exec rails runner 'puts "Syntax OK. Ruby: " + RUBY_VERSION + ", Rails: " + Rails::VERSION::STRING'
      - run:
          name: RSpec を並列実行
          command: |
            bundle exec rspec --profile 10 \
                              --format RspecJunitFormatter \
                              --out test_results/rspec.xml \
                              --format progress \
                              $(circleci tests glob "spec/**/*_spec.rb" | circleci tests split --split-by=timings)
      - store_test_results:
          path: test_results

  deploy:
    executor: default
    steps:
      - checkout
      - run:
          name: Install Heroku CLI
          command: curl https://cli-assets.heroku.com/install.sh | sh
      - run:
          name: heroku maintenance on
          command: heroku maintenance:on --app ${HEROKU_APP_NAME}
      - run:
          name: Deploy to Heroku_Production
          command: |
            git push https://heroku:$HEROKU_API_KEY@git.heroku.com/$HEROKU_APP_NAME.git master
      - run:
          name: heroku maintenance off
          command: heroku maintenance:off --app ${HEROKU_APP_NAME}

workflows:
  build-deploy:
    jobs:
      - build
      - deploy:
          requires:
            - build
          filters:
            branches:
              only:
                - master
